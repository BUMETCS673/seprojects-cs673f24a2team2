<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bu.cs673.secondhand.mapper.IdleItemMapper">
  <resultMap id="IdleItemBaseResultMap" type="edu.bu.cs673.secondhand.domain.IdleItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="idle_name" jdbcType="VARCHAR" property="idleName" />
    <result column="idle_details" jdbcType="VARCHAR" property="idleDetails" />
    <result column="picture_list" jdbcType="VARCHAR" property="pictureList" />
    <result column="idle_price" jdbcType="DECIMAL" property="idlePrice" />
    <result column="idle_place" jdbcType="VARCHAR" property="idlePlace" />
    <result column="idle_label" jdbcType="INTEGER" property="idleLabel" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="idle_status" jdbcType="TINYINT" property="idleStatus" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, idle_name, idle_details, picture_list, idle_price, idle_place, idle_label, release_time, 
    idle_status, user_id
  </sql>
  <select id="selectByExample" parameterType="edu.bu.cs673.secondhand.domain.IdleItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sh_idle_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="findIdleByList" parameterType="list" resultMap="BaseResultMap">
    SELECT
    id, user_id, idle_name, idle_details, idle_price, release_time
    <!-- Add other necessary columns -->
    FROM sh_idle_item
    WHERE id IN
    <foreach collection="idList" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sh_idle_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sh_idle_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.bu.cs673.secondhand.domain.IdleItemExample">
    delete from sh_idle_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.bu.cs673.secondhand.domain.IdleItem">
    insert into sh_idle_item (id, idle_name, idle_details, 
      picture_list, idle_price, idle_place, 
      idle_label, release_time, idle_status, 
      user_id)
    values (#{id,jdbcType=BIGINT}, #{idleName,jdbcType=VARCHAR}, #{idleDetails,jdbcType=VARCHAR}, 
      #{pictureList,jdbcType=VARCHAR}, #{idlePrice,jdbcType=DECIMAL}, #{idlePlace,jdbcType=VARCHAR}, 
      #{idleLabel,jdbcType=INTEGER}, #{releaseTime,jdbcType=TIMESTAMP}, #{idleStatus,jdbcType=TINYINT}, 
      #{userId,jdbcType=BIGINT})
    <selectKey resultType="Long" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="edu.bu.cs673.secondhand.domain.IdleItem">
    insert into sh_idle_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idleName != null">
        idle_name,
      </if>
      <if test="idleDetails != null">
        idle_details,
      </if>
      <if test="pictureList != null">
        picture_list,
      </if>
      <if test="idlePrice != null">
        idle_price,
      </if>
      <if test="idlePlace != null">
        idle_place,
      </if>
      <if test="idleLabel != null">
        idle_label,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="idleStatus != null">
        idle_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="idleName != null">
        #{idleName,jdbcType=VARCHAR},
      </if>
      <if test="idleDetails != null">
        #{idleDetails,jdbcType=VARCHAR},
      </if>
      <if test="pictureList != null">
        #{pictureList,jdbcType=VARCHAR},
      </if>
      <if test="idlePrice != null">
        #{idlePrice,jdbcType=DECIMAL},
      </if>
      <if test="idlePlace != null">
        #{idlePlace,jdbcType=VARCHAR},
      </if>
      <if test="idleLabel != null">
        #{idleLabel,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idleStatus != null">
        #{idleStatus,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.bu.cs673.secondhand.domain.IdleItemExample" resultType="java.lang.Long">
    select count(*) from sh_idle_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sh_idle_item
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.idleName != null">
        idle_name = #{row.idleName,jdbcType=VARCHAR},
      </if>
      <if test="row.idleDetails != null">
        idle_details = #{row.idleDetails,jdbcType=VARCHAR},
      </if>
      <if test="row.pictureList != null">
        picture_list = #{row.pictureList,jdbcType=VARCHAR},
      </if>
      <if test="row.idlePrice != null">
        idle_price = #{row.idlePrice,jdbcType=DECIMAL},
      </if>
      <if test="row.idlePlace != null">
        idle_place = #{row.idlePlace,jdbcType=VARCHAR},
      </if>
      <if test="row.idleLabel != null">
        idle_label = #{row.idleLabel,jdbcType=INTEGER},
      </if>
      <if test="row.releaseTime != null">
        release_time = #{row.releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.idleStatus != null">
        idle_status = #{row.idleStatus,jdbcType=TINYINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sh_idle_item
    set id = #{row.id,jdbcType=BIGINT},
      idle_name = #{row.idleName,jdbcType=VARCHAR},
      idle_details = #{row.idleDetails,jdbcType=VARCHAR},
      picture_list = #{row.pictureList,jdbcType=VARCHAR},
      idle_price = #{row.idlePrice,jdbcType=DECIMAL},
      idle_place = #{row.idlePlace,jdbcType=VARCHAR},
      idle_label = #{row.idleLabel,jdbcType=INTEGER},
      release_time = #{row.releaseTime,jdbcType=TIMESTAMP},
      idle_status = #{row.idleStatus,jdbcType=TINYINT},
      user_id = #{row.userId,jdbcType=BIGINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bu.cs673.secondhand.domain.IdleItem">
    update sh_idle_item
    <set>
      <if test="idleName != null">
        idle_name = #{idleName,jdbcType=VARCHAR},
      </if>
      <if test="idleDetails != null">
        idle_details = #{idleDetails,jdbcType=VARCHAR},
      </if>
      <if test="pictureList != null">
        picture_list = #{pictureList,jdbcType=VARCHAR},
      </if>
      <if test="idlePrice != null">
        idle_price = #{idlePrice,jdbcType=DECIMAL},
      </if>
      <if test="idlePlace != null">
        idle_place = #{idlePlace,jdbcType=VARCHAR},
      </if>
      <if test="idleLabel != null">
        idle_label = #{idleLabel,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idleStatus != null">
        idle_status = #{idleStatus,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bu.cs673.secondhand.domain.IdleItem">
    update sh_idle_item
    set idle_name = #{idleName,jdbcType=VARCHAR},
      idle_details = #{idleDetails,jdbcType=VARCHAR},
      picture_list = #{pictureList,jdbcType=VARCHAR},
      idle_price = #{idlePrice,jdbcType=DECIMAL},
      idle_place = #{idlePlace,jdbcType=VARCHAR},
      idle_label = #{idleLabel,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      idle_status = #{idleStatus,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="edu.bu.cs673.secondhand.domain.IdleItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sh_idle_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>